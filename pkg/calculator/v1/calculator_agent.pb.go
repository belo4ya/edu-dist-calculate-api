// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: calculator/v1/calculator_agent.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operations for calculation
type TaskOperation int32

const (
	TaskOperation_TASK_OPERATION_UNSPECIFIED    TaskOperation = 0
	TaskOperation_TASK_OPERATION_ADDITION       TaskOperation = 1
	TaskOperation_TASK_OPERATION_SUBTRACTION    TaskOperation = 2
	TaskOperation_TASK_OPERATION_MULTIPLICATION TaskOperation = 3
	TaskOperation_TASK_OPERATION_DIVISION       TaskOperation = 4
)

// Enum value maps for TaskOperation.
var (
	TaskOperation_name = map[int32]string{
		0: "TASK_OPERATION_UNSPECIFIED",
		1: "TASK_OPERATION_ADDITION",
		2: "TASK_OPERATION_SUBTRACTION",
		3: "TASK_OPERATION_MULTIPLICATION",
		4: "TASK_OPERATION_DIVISION",
	}
	TaskOperation_value = map[string]int32{
		"TASK_OPERATION_UNSPECIFIED":    0,
		"TASK_OPERATION_ADDITION":       1,
		"TASK_OPERATION_SUBTRACTION":    2,
		"TASK_OPERATION_MULTIPLICATION": 3,
		"TASK_OPERATION_DIVISION":       4,
	}
)

func (x TaskOperation) Enum() *TaskOperation {
	p := new(TaskOperation)
	*p = x
	return p
}

func (x TaskOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_v1_calculator_agent_proto_enumTypes[0].Descriptor()
}

func (TaskOperation) Type() protoreflect.EnumType {
	return &file_calculator_v1_calculator_agent_proto_enumTypes[0]
}

func (x TaskOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskOperation.Descriptor instead.
func (TaskOperation) EnumDescriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{0}
}

type ListExpressionTasksResponse_TaskStatus int32

const (
	ListExpressionTasksResponse_TASK_STATUS_UNSPECIFIED ListExpressionTasksResponse_TaskStatus = 0
	ListExpressionTasksResponse_TASK_STATUS_PENDING     ListExpressionTasksResponse_TaskStatus = 1
	ListExpressionTasksResponse_TASK_STATUS_IN_PROGRESS ListExpressionTasksResponse_TaskStatus = 2
	ListExpressionTasksResponse_TASK_STATUS_COMPLETED   ListExpressionTasksResponse_TaskStatus = 3
	ListExpressionTasksResponse_TASK_STATUS_FAILED      ListExpressionTasksResponse_TaskStatus = 4
)

// Enum value maps for ListExpressionTasksResponse_TaskStatus.
var (
	ListExpressionTasksResponse_TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
	}
	ListExpressionTasksResponse_TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
	}
)

func (x ListExpressionTasksResponse_TaskStatus) Enum() *ListExpressionTasksResponse_TaskStatus {
	p := new(ListExpressionTasksResponse_TaskStatus)
	*p = x
	return p
}

func (x ListExpressionTasksResponse_TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListExpressionTasksResponse_TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_v1_calculator_agent_proto_enumTypes[1].Descriptor()
}

func (ListExpressionTasksResponse_TaskStatus) Type() protoreflect.EnumType {
	return &file_calculator_v1_calculator_agent_proto_enumTypes[1]
}

func (x ListExpressionTasksResponse_TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListExpressionTasksResponse_TaskStatus.Descriptor instead.
func (ListExpressionTasksResponse_TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{4, 0}
}

// Task for agent
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Arg1          float64              `protobuf:"fixed64,2,opt,name=arg1,proto3" json:"arg1,omitempty"`
	Arg2          float64              `protobuf:"fixed64,3,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Operation     TaskOperation        `protobuf:"varint,4,opt,name=operation,proto3,enum=calculator.v1.TaskOperation" json:"operation,omitempty"`
	OperationTime *durationpb.Duration `protobuf:"bytes,5,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetArg1() float64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *Task) GetArg2() float64 {
	if x != nil {
		return x.Arg2
	}
	return 0
}

func (x *Task) GetOperation() TaskOperation {
	if x != nil {
		return x.Operation
	}
	return TaskOperation_TASK_OPERATION_UNSPECIFIED
}

func (x *Task) GetOperationTime() *durationpb.Duration {
	if x != nil {
		return x.OperationTime
	}
	return nil
}

// Response with task for agent
type GetTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Task `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskResponse) Reset() {
	*x = GetTaskResponse{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskResponse) ProtoMessage() {}

func (x *GetTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTaskResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{1}
}

func (x *GetTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// Request to submit task result
type SubmitTaskResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Result float64 `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubmitTaskResultRequest) Reset() {
	*x = SubmitTaskResultRequest{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResultRequest) ProtoMessage() {}

func (x *SubmitTaskResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResultRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskResultRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTaskResultRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmitTaskResultRequest) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// Request for list of expression's tasks
type ListExpressionTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListExpressionTasksRequest) Reset() {
	*x = ListExpressionTasksRequest{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExpressionTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpressionTasksRequest) ProtoMessage() {}

func (x *ListExpressionTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpressionTasksRequest.ProtoReflect.Descriptor instead.
func (*ListExpressionTasksRequest) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{3}
}

func (x *ListExpressionTasksRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List of expression's tasks
type ListExpressionTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*ListExpressionTasksResponse_Task `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ListExpressionTasksResponse) Reset() {
	*x = ListExpressionTasksResponse{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExpressionTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpressionTasksResponse) ProtoMessage() {}

func (x *ListExpressionTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpressionTasksResponse.ProtoReflect.Descriptor instead.
func (*ListExpressionTasksResponse) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{4}
}

func (x *ListExpressionTasksResponse) GetTasks() []*ListExpressionTasksResponse_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ListExpressionTasksResponse_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExpressionId   string                                 `protobuf:"bytes,2,opt,name=expression_id,json=expressionId,proto3" json:"expression_id,omitempty"`
	ParentTask_1Id string                                 `protobuf:"bytes,3,opt,name=parent_task_1_id,json=parentTask1Id,proto3" json:"parent_task_1_id,omitempty"`
	ParentTask_2Id string                                 `protobuf:"bytes,4,opt,name=parent_task_2_id,json=parentTask2Id,proto3" json:"parent_task_2_id,omitempty"`
	Arg_1          float64                                `protobuf:"fixed64,5,opt,name=arg_1,json=arg1,proto3" json:"arg_1,omitempty"`
	Arg_2          float64                                `protobuf:"fixed64,6,opt,name=arg_2,json=arg2,proto3" json:"arg_2,omitempty"`
	Operation      TaskOperation                          `protobuf:"varint,7,opt,name=operation,proto3,enum=calculator.v1.TaskOperation" json:"operation,omitempty"`
	OperationTime  *durationpb.Duration                   `protobuf:"bytes,8,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	Status         ListExpressionTasksResponse_TaskStatus `protobuf:"varint,9,opt,name=status,proto3,enum=calculator.v1.ListExpressionTasksResponse_TaskStatus" json:"status,omitempty"`
	Result         float64                                `protobuf:"fixed64,10,opt,name=result,proto3" json:"result,omitempty"`
	ExpireAt       *timestamppb.Timestamp                 `protobuf:"bytes,11,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	CreatedAt      *timestamppb.Timestamp                 `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp                 `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ListExpressionTasksResponse_Task) Reset() {
	*x = ListExpressionTasksResponse_Task{}
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExpressionTasksResponse_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExpressionTasksResponse_Task) ProtoMessage() {}

func (x *ListExpressionTasksResponse_Task) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_v1_calculator_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExpressionTasksResponse_Task.ProtoReflect.Descriptor instead.
func (*ListExpressionTasksResponse_Task) Descriptor() ([]byte, []int) {
	return file_calculator_v1_calculator_agent_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListExpressionTasksResponse_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListExpressionTasksResponse_Task) GetExpressionId() string {
	if x != nil {
		return x.ExpressionId
	}
	return ""
}

func (x *ListExpressionTasksResponse_Task) GetParentTask_1Id() string {
	if x != nil {
		return x.ParentTask_1Id
	}
	return ""
}

func (x *ListExpressionTasksResponse_Task) GetParentTask_2Id() string {
	if x != nil {
		return x.ParentTask_2Id
	}
	return ""
}

func (x *ListExpressionTasksResponse_Task) GetArg_1() float64 {
	if x != nil {
		return x.Arg_1
	}
	return 0
}

func (x *ListExpressionTasksResponse_Task) GetArg_2() float64 {
	if x != nil {
		return x.Arg_2
	}
	return 0
}

func (x *ListExpressionTasksResponse_Task) GetOperation() TaskOperation {
	if x != nil {
		return x.Operation
	}
	return TaskOperation_TASK_OPERATION_UNSPECIFIED
}

func (x *ListExpressionTasksResponse_Task) GetOperationTime() *durationpb.Duration {
	if x != nil {
		return x.OperationTime
	}
	return nil
}

func (x *ListExpressionTasksResponse_Task) GetStatus() ListExpressionTasksResponse_TaskStatus {
	if x != nil {
		return x.Status
	}
	return ListExpressionTasksResponse_TASK_STATUS_UNSPECIFIED
}

func (x *ListExpressionTasksResponse_Task) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *ListExpressionTasksResponse_Task) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

func (x *ListExpressionTasksResponse_Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListExpressionTasksResponse_Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_calculator_v1_calculator_agent_proto protoreflect.FileDescriptor

var file_calculator_v1_calculator_agent_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x67, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72,
	0x67, 0x32, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x41, 0x0a, 0x17,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x2c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x06,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x1a, 0xcb, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x31, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x31, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x32, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x32, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x67, 0x5f, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x31, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x72, 0x67,
	0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x32, 0x12, 0x3a,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0xac, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x41, 0x53,
	0x4b, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x56, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x32, 0xf1, 0x02, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x12, 0x6d, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01,
	0x2a, 0x22, 0x0e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x6c, 0x6f, 0x34, 0x79, 0x61,
	0x2f, 0x65, 0x64, 0x75, 0x2d, 0x64, 0x69, 0x73, 0x74, 0x2d, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculator_v1_calculator_agent_proto_rawDescOnce sync.Once
	file_calculator_v1_calculator_agent_proto_rawDescData = file_calculator_v1_calculator_agent_proto_rawDesc
)

func file_calculator_v1_calculator_agent_proto_rawDescGZIP() []byte {
	file_calculator_v1_calculator_agent_proto_rawDescOnce.Do(func() {
		file_calculator_v1_calculator_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculator_v1_calculator_agent_proto_rawDescData)
	})
	return file_calculator_v1_calculator_agent_proto_rawDescData
}

var file_calculator_v1_calculator_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_calculator_v1_calculator_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_calculator_v1_calculator_agent_proto_goTypes = []any{
	(TaskOperation)(0),                          // 0: calculator.v1.TaskOperation
	(ListExpressionTasksResponse_TaskStatus)(0), // 1: calculator.v1.ListExpressionTasksResponse.TaskStatus
	(*Task)(nil),                                // 2: calculator.v1.Task
	(*GetTaskResponse)(nil),                     // 3: calculator.v1.GetTaskResponse
	(*SubmitTaskResultRequest)(nil),             // 4: calculator.v1.SubmitTaskResultRequest
	(*ListExpressionTasksRequest)(nil),          // 5: calculator.v1.ListExpressionTasksRequest
	(*ListExpressionTasksResponse)(nil),         // 6: calculator.v1.ListExpressionTasksResponse
	(*ListExpressionTasksResponse_Task)(nil),    // 7: calculator.v1.ListExpressionTasksResponse.Task
	(*durationpb.Duration)(nil),                 // 8: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),               // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                       // 10: google.protobuf.Empty
}
var file_calculator_v1_calculator_agent_proto_depIdxs = []int32{
	0,  // 0: calculator.v1.Task.operation:type_name -> calculator.v1.TaskOperation
	8,  // 1: calculator.v1.Task.operation_time:type_name -> google.protobuf.Duration
	2,  // 2: calculator.v1.GetTaskResponse.task:type_name -> calculator.v1.Task
	7,  // 3: calculator.v1.ListExpressionTasksResponse.tasks:type_name -> calculator.v1.ListExpressionTasksResponse.Task
	0,  // 4: calculator.v1.ListExpressionTasksResponse.Task.operation:type_name -> calculator.v1.TaskOperation
	8,  // 5: calculator.v1.ListExpressionTasksResponse.Task.operation_time:type_name -> google.protobuf.Duration
	1,  // 6: calculator.v1.ListExpressionTasksResponse.Task.status:type_name -> calculator.v1.ListExpressionTasksResponse.TaskStatus
	9,  // 7: calculator.v1.ListExpressionTasksResponse.Task.expire_at:type_name -> google.protobuf.Timestamp
	9,  // 8: calculator.v1.ListExpressionTasksResponse.Task.created_at:type_name -> google.protobuf.Timestamp
	9,  // 9: calculator.v1.ListExpressionTasksResponse.Task.updated_at:type_name -> google.protobuf.Timestamp
	10, // 10: calculator.v1.AgentService.GetTask:input_type -> google.protobuf.Empty
	4,  // 11: calculator.v1.AgentService.SubmitTaskResult:input_type -> calculator.v1.SubmitTaskResultRequest
	5,  // 12: calculator.v1.AgentService.ListExpressionTasks:input_type -> calculator.v1.ListExpressionTasksRequest
	3,  // 13: calculator.v1.AgentService.GetTask:output_type -> calculator.v1.GetTaskResponse
	10, // 14: calculator.v1.AgentService.SubmitTaskResult:output_type -> google.protobuf.Empty
	6,  // 15: calculator.v1.AgentService.ListExpressionTasks:output_type -> calculator.v1.ListExpressionTasksResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_calculator_v1_calculator_agent_proto_init() }
func file_calculator_v1_calculator_agent_proto_init() {
	if File_calculator_v1_calculator_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculator_v1_calculator_agent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculator_v1_calculator_agent_proto_goTypes,
		DependencyIndexes: file_calculator_v1_calculator_agent_proto_depIdxs,
		EnumInfos:         file_calculator_v1_calculator_agent_proto_enumTypes,
		MessageInfos:      file_calculator_v1_calculator_agent_proto_msgTypes,
	}.Build()
	File_calculator_v1_calculator_agent_proto = out.File
	file_calculator_v1_calculator_agent_proto_rawDesc = nil
	file_calculator_v1_calculator_agent_proto_goTypes = nil
	file_calculator_v1_calculator_agent_proto_depIdxs = nil
}
