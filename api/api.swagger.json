{
  "swagger": "2.0",
  "info": {
    "title": "calculator/v1/calculator_agent.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AgentService"
    },
    {
      "name": "CalculatorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/calculate": {
      "post": {
        "summary": "Add arithmetic expression for calculation",
        "operationId": "CalculatorService_Calculate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CalculateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CalculateRequest"
            }
          }
        ],
        "tags": [
          "CalculatorService"
        ]
      }
    },
    "/api/v1/expressions": {
      "get": {
        "summary": "Get list of expressions",
        "operationId": "CalculatorService_ListExpressions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListExpressionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CalculatorService"
        ]
      }
    },
    "/api/v1/expressions/{id}": {
      "get": {
        "summary": "Get expression by its identifier",
        "operationId": "CalculatorService_GetExpression",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetExpressionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CalculatorService"
        ]
      }
    },
    "/internal/expressions/{id}/tasks": {
      "get": {
        "summary": "Get list of expression's tasks (for debug)",
        "operationId": "AgentService_ListExpressionTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListExpressionTasksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AgentService"
        ]
      }
    },
    "/internal/task": {
      "get": {
        "summary": "Get task for execution (for agents)",
        "operationId": "AgentService_GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTaskResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AgentService"
        ]
      },
      "post": {
        "summary": "Submit task processing result (from agents)",
        "operationId": "AgentService_SubmitTaskResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SubmitTaskResultRequest"
            }
          }
        ],
        "tags": [
          "AgentService"
        ]
      }
    }
  },
  "definitions": {
    "ListExpressionTasksResponseTaskStatus": {
      "type": "string",
      "enum": [
        "TASK_STATUS_PENDING",
        "TASK_STATUS_IN_PROGRESS",
        "TASK_STATUS_COMPLETED",
        "TASK_STATUS_FAILED"
      ]
    },
    "calculatorv1Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "arg1": {
          "type": "number",
          "format": "double"
        },
        "arg2": {
          "type": "number",
          "format": "double"
        },
        "operation": {
          "$ref": "#/definitions/v1TaskOperation"
        },
        "operation_time": {
          "type": "string"
        }
      },
      "title": "Task for agent"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CalculateRequest": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      },
      "title": "Request for expression calculation"
    },
    "v1CalculateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "Response with expression identifier"
    },
    "v1Expression": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1ExpressionStatus"
        },
        "result": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Expression information"
    },
    "v1ExpressionStatus": {
      "type": "string",
      "enum": [
        "EXPRESSION_STATUS_PENDING",
        "EXPRESSION_STATUS_IN_PROGRESS",
        "EXPRESSION_STATUS_COMPLETED",
        "EXPRESSION_STATUS_FAILED"
      ],
      "title": "Expression calculation status"
    },
    "v1GetExpressionResponse": {
      "type": "object",
      "properties": {
        "expression": {
          "$ref": "#/definitions/v1Expression"
        }
      },
      "title": "Response with expression information"
    },
    "v1GetTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "$ref": "#/definitions/calculatorv1Task"
        }
      },
      "title": "Response with task for agent"
    },
    "v1ListExpressionTasksResponse": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListExpressionTasksResponseTask"
          }
        }
      },
      "title": "List of expression's tasks"
    },
    "v1ListExpressionTasksResponseTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "expression_id": {
          "type": "string"
        },
        "parent_task_1_id": {
          "type": "string"
        },
        "parent_task_2_id": {
          "type": "string"
        },
        "arg_1": {
          "type": "number",
          "format": "double"
        },
        "arg_2": {
          "type": "number",
          "format": "double"
        },
        "operation": {
          "$ref": "#/definitions/v1TaskOperation"
        },
        "operation_time": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ListExpressionTasksResponseTaskStatus"
        },
        "result": {
          "type": "number",
          "format": "double"
        },
        "expire_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1ListExpressionsResponse": {
      "type": "object",
      "properties": {
        "expressions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Expression"
          }
        }
      },
      "title": "List of expressions"
    },
    "v1SubmitTaskResultRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "result": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Request to submit task result"
    },
    "v1TaskOperation": {
      "type": "string",
      "enum": [
        "TASK_OPERATION_ADDITION",
        "TASK_OPERATION_SUBTRACTION",
        "TASK_OPERATION_MULTIPLICATION",
        "TASK_OPERATION_DIVISION"
      ],
      "title": "Operations for calculation"
    }
  }
}
